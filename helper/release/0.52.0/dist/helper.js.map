{"version":3,"file":"helper.js","sources":["../../../node_modules/@daybrush/utils/dist/utils.esm.js","../src/groups.ts","../src/GroupManager.ts"],"sourcesContent":["/*\nCopyright (c) 2018 Daybrush\n@name: @daybrush/utils\nlicense: MIT\nauthor: Daybrush\nrepository: https://github.com/daybrush/utils\n@version 1.13.0\n*/\n/**\n* @namespace\n* @name Consts\n*/\n/**\n* get string \"rgb\"\n* @memberof Color\n* @example\nimport {RGB} from \"@daybrush/utils\";\n\nconsole.log(RGB); // \"rgb\"\n*/\nvar RGB = \"rgb\";\n/**\n* get string \"rgba\"\n* @memberof Color\n* @example\nimport {RGBA} from \"@daybrush/utils\";\n\nconsole.log(RGBA); // \"rgba\"\n*/\nvar RGBA = \"rgba\";\n/**\n* get string \"hsl\"\n* @memberof Color\n* @example\nimport {HSL} from \"@daybrush/utils\";\n\nconsole.log(HSL); // \"hsl\"\n*/\nvar HSL = \"hsl\";\n/**\n* get string \"hsla\"\n* @memberof Color\n* @example\nimport {HSLA} from \"@daybrush/utils\";\n\nconsole.log(HSLA); // \"hsla\"\n*/\nvar HSLA = \"hsla\";\n/**\n* gets an array of color models.\n* @memberof Color\n* @example\nimport {COLOR_MODELS} from \"@daybrush/utils\";\n\nconsole.log(COLOR_MODELS); // [\"rgb\", \"rgba\", \"hsl\", \"hsla\"];\n*/\nvar COLOR_MODELS = [RGB, RGBA, HSL, HSLA];\n/**\n* get string \"function\"\n* @memberof Consts\n* @example\nimport {FUNCTION} from \"@daybrush/utils\";\n\nconsole.log(FUNCTION); // \"function\"\n*/\nvar FUNCTION = \"function\";\n/**\n* get string \"property\"\n* @memberof Consts\n* @example\nimport {PROPERTY} from \"@daybrush/utils\";\n\nconsole.log(PROPERTY); // \"property\"\n*/\nvar PROPERTY = \"property\";\n/**\n* get string \"array\"\n* @memberof Consts\n* @example\nimport {ARRAY} from \"@daybrush/utils\";\n\nconsole.log(ARRAY); // \"array\"\n*/\nvar ARRAY = \"array\";\n/**\n* get string \"object\"\n* @memberof Consts\n* @example\nimport {OBJECT} from \"@daybrush/utils\";\n\nconsole.log(OBJECT); // \"object\"\n*/\nvar OBJECT = \"object\";\n/**\n* get string \"string\"\n* @memberof Consts\n* @example\nimport {STRING} from \"@daybrush/utils\";\n\nconsole.log(STRING); // \"string\"\n*/\nvar STRING = \"string\";\n/**\n* get string \"number\"\n* @memberof Consts\n* @example\nimport {NUMBER} from \"@daybrush/utils\";\n\nconsole.log(NUMBER); // \"number\"\n*/\nvar NUMBER = \"number\";\n/**\n* get string \"undefined\"\n* @memberof Consts\n* @example\nimport {UNDEFINED} from \"@daybrush/utils\";\n\nconsole.log(UNDEFINED); // \"undefined\"\n*/\nvar UNDEFINED = \"undefined\";\n/**\n* Check whether the environment is window or node.js.\n* @memberof Consts\n* @example\nimport {IS_WINDOW} from \"@daybrush/utils\";\n\nconsole.log(IS_WINDOW); // false in node.js\nconsole.log(IS_WINDOW); // true in browser\n*/\nvar IS_WINDOW = typeof window !== UNDEFINED;\n/**\n* Check whether the environment is window or node.js.\n* @memberof Consts\n* @name document\n* @example\nimport {IS_WINDOW} from \"@daybrush/utils\";\n\nconsole.log(IS_WINDOW); // false in node.js\nconsole.log(IS_WINDOW); // true in browser\n*/\nvar doc = typeof document !== UNDEFINED && document; // FIXME: this type maybe false\nvar prefixes = [\"webkit\", \"ms\", \"moz\", \"o\"];\n/**\n * @namespace CrossBrowser\n */\n/**\n* Get a CSS property with a vendor prefix that supports cross browser.\n* @function\n* @param {string} property - A CSS property\n* @return {string} CSS property with cross-browser vendor prefix\n* @memberof CrossBrowser\n* @example\nimport {getCrossBrowserProperty} from \"@daybrush/utils\";\n\nconsole.log(getCrossBrowserProperty(\"transform\")); // \"transform\", \"-ms-transform\", \"-webkit-transform\"\nconsole.log(getCrossBrowserProperty(\"filter\")); // \"filter\", \"-webkit-filter\"\n*/\nvar getCrossBrowserProperty = /*#__PURE__*/function (property) {\n  if (!doc) {\n    return \"\";\n  }\n  var styles = (doc.body || doc.documentElement).style;\n  var length = prefixes.length;\n  if (typeof styles[property] !== UNDEFINED) {\n    return property;\n  }\n  for (var i = 0; i < length; ++i) {\n    var name = \"-\" + prefixes[i] + \"-\" + property;\n    if (typeof styles[name] !== UNDEFINED) {\n      return name;\n    }\n  }\n  return \"\";\n};\n/**\n* get string \"transfrom\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {TRANSFORM} from \"@daybrush/utils\";\n\nconsole.log(TRANSFORM); // \"transform\", \"-ms-transform\", \"-webkit-transform\"\n*/\nvar TRANSFORM = /*#__PURE__*/getCrossBrowserProperty(\"transform\");\n/**\n* get string \"filter\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {FILTER} from \"@daybrush/utils\";\n\nconsole.log(FILTER); // \"filter\", \"-ms-filter\", \"-webkit-filter\"\n*/\nvar FILTER = /*#__PURE__*/getCrossBrowserProperty(\"filter\");\n/**\n* get string \"animation\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {ANIMATION} from \"@daybrush/utils\";\n\nconsole.log(ANIMATION); // \"animation\", \"-ms-animation\", \"-webkit-animation\"\n*/\nvar ANIMATION = /*#__PURE__*/getCrossBrowserProperty(\"animation\");\n/**\n* get string \"keyframes\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {KEYFRAMES} from \"@daybrush/utils\";\n\nconsole.log(KEYFRAMES); // \"keyframes\", \"-ms-keyframes\", \"-webkit-keyframes\"\n*/\nvar KEYFRAMES = /*#__PURE__*/ANIMATION.replace(\"animation\", \"keyframes\");\nvar OPEN_CLOSED_CHARACTERS = [{\n  open: \"(\",\n  close: \")\"\n}, {\n  open: \"\\\"\",\n  close: \"\\\"\"\n}, {\n  open: \"'\",\n  close: \"'\"\n}, {\n  open: \"\\\\\\\"\",\n  close: \"\\\\\\\"\"\n}, {\n  open: \"\\\\'\",\n  close: \"\\\\'\"\n}];\nvar TINY_NUM = 0.0000001;\nvar REVERSE_TINY_NUM = 1 / TINY_NUM;\nvar DEFAULT_UNIT_PRESETS = {\n  \"cm\": function (pos) {\n    return pos * 96 / 2.54;\n  },\n  \"mm\": function (pos) {\n    return pos * 96 / 254;\n  },\n  \"in\": function (pos) {\n    return pos * 96;\n  },\n  \"pt\": function (pos) {\n    return pos * 96 / 72;\n  },\n  \"pc\": function (pos) {\n    return pos * 96 / 6;\n  },\n  \"%\": function (pos, size) {\n    return pos * size / 100;\n  },\n  \"vw\": function (pos, size) {\n    if (size === void 0) {\n      size = window.innerWidth;\n    }\n    return pos / 100 * size;\n  },\n  \"vh\": function (pos, size) {\n    if (size === void 0) {\n      size = window.innerHeight;\n    }\n    return pos / 100 * size;\n  },\n  \"vmax\": function (pos, size) {\n    if (size === void 0) {\n      size = Math.max(window.innerWidth, window.innerHeight);\n    }\n    return pos / 100 * size;\n  },\n  \"vmin\": function (pos, size) {\n    if (size === void 0) {\n      size = Math.min(window.innerWidth, window.innerHeight);\n    }\n    return pos / 100 * size;\n  }\n};\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\nfunction __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n  return r;\n}\n\n/**\n* @namespace\n* @name Utils\n*/\n/**\n * Returns the inner product of two numbers(`a1`, `a2`) by two criteria(`b1`, `b2`).\n * @memberof Utils\n * @param - The first number\n * @param - The second number\n * @param - The first number to base on the inner product\n * @param - The second number to base on the inner product\n * @return - Returns the inner product\nimport { dot } from \"@daybrush/utils\";\n\nconsole.log(dot(0, 15, 2, 3)); // 6\nconsole.log(dot(5, 15, 2, 3)); // 9\nconsole.log(dot(5, 15, 1, 1)); // 10\n */\nfunction dot(a1, a2, b1, b2) {\n  return (a1 * b2 + a2 * b1) / (b1 + b2);\n}\n/**\n* Check the type that the value is undefined.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {boolean} true if the type is correct, false otherwise\n* @example\nimport {isUndefined} from \"@daybrush/utils\";\n\nconsole.log(isUndefined(undefined)); // true\nconsole.log(isUndefined(\"\")); // false\nconsole.log(isUndefined(1)); // false\nconsole.log(isUndefined(null)); // false\n*/\nfunction isUndefined(value) {\n  return typeof value === UNDEFINED;\n}\n/**\n* Check the type that the value is object.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isObject} from \"@daybrush/utils\";\n\nconsole.log(isObject({})); // true\nconsole.log(isObject(undefined)); // false\nconsole.log(isObject(\"\")); // false\nconsole.log(isObject(null)); // false\n*/\nfunction isObject(value) {\n  return value && typeof value === OBJECT;\n}\n/**\n* Check the type that the value is isArray.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isArray} from \"@daybrush/utils\";\n\nconsole.log(isArray([])); // true\nconsole.log(isArray({})); // false\nconsole.log(isArray(undefined)); // false\nconsole.log(isArray(null)); // false\n*/\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n/**\n* Check the type that the value is string.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isString} from \"@daybrush/utils\";\n\nconsole.log(isString(\"1234\")); // true\nconsole.log(isString(undefined)); // false\nconsole.log(isString(1)); // false\nconsole.log(isString(null)); // false\n*/\nfunction isString(value) {\n  return typeof value === STRING;\n}\nfunction isNumber(value) {\n  return typeof value === NUMBER;\n}\n/**\n* Check the type that the value is function.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isFunction} from \"@daybrush/utils\";\n\nconsole.log(isFunction(function a() {})); // true\nconsole.log(isFunction(() => {})); // true\nconsole.log(isFunction(\"1234\")); // false\nconsole.log(isFunction(1)); // false\nconsole.log(isFunction(null)); // false\n*/\nfunction isFunction(value) {\n  return typeof value === FUNCTION;\n}\nfunction isEqualSeparator(character, separator) {\n  var isCharacterSpace = character === \"\" || character == \" \";\n  var isSeparatorSpace = separator === \"\" || separator == \" \";\n  return isSeparatorSpace && isCharacterSpace || character === separator;\n}\nfunction findOpen(openCharacter, texts, index, length, openCloseCharacters) {\n  var isIgnore = findIgnore(openCharacter, texts, index);\n  if (!isIgnore) {\n    return findClose(openCharacter, texts, index + 1, length, openCloseCharacters);\n  }\n  return index;\n}\nfunction findIgnore(character, texts, index) {\n  if (!character.ignore) {\n    return null;\n  }\n  var otherText = texts.slice(Math.max(index - 3, 0), index + 3).join(\"\");\n  return new RegExp(character.ignore).exec(otherText);\n}\nfunction findClose(closeCharacter, texts, index, length, openCloseCharacters) {\n  var _loop_1 = function (i) {\n    var character = texts[i].trim();\n    if (character === closeCharacter.close && !findIgnore(closeCharacter, texts, i)) {\n      return {\n        value: i\n      };\n    }\n    var nextIndex = i;\n    // re open\n    var openCharacter = find(openCloseCharacters, function (_a) {\n      var open = _a.open;\n      return open === character;\n    });\n    if (openCharacter) {\n      nextIndex = findOpen(openCharacter, texts, i, length, openCloseCharacters);\n    }\n    if (nextIndex === -1) {\n      return out_i_1 = i, \"break\";\n    }\n    i = nextIndex;\n    out_i_1 = i;\n  };\n  var out_i_1;\n  for (var i = index; i < length; ++i) {\n    var state_1 = _loop_1(i);\n    i = out_i_1;\n    if (typeof state_1 === \"object\") return state_1.value;\n    if (state_1 === \"break\") break;\n  }\n  return -1;\n}\nfunction splitText(text, splitOptions) {\n  var _a = isString(splitOptions) ? {\n      separator: splitOptions\n    } : splitOptions,\n    _b = _a.separator,\n    separator = _b === void 0 ? \",\" : _b,\n    isSeparateFirst = _a.isSeparateFirst,\n    isSeparateOnlyOpenClose = _a.isSeparateOnlyOpenClose,\n    _c = _a.isSeparateOpenClose,\n    isSeparateOpenClose = _c === void 0 ? isSeparateOnlyOpenClose : _c,\n    _d = _a.openCloseCharacters,\n    openCloseCharacters = _d === void 0 ? OPEN_CLOSED_CHARACTERS : _d;\n  var openClosedText = openCloseCharacters.map(function (_a) {\n    var open = _a.open,\n      close = _a.close;\n    if (open === close) {\n      return open;\n    }\n    return open + \"|\" + close;\n  }).join(\"|\");\n  var regexText = \"(\\\\s*\" + separator + \"\\\\s*|\" + openClosedText + \"|\\\\s+)\";\n  var regex = new RegExp(regexText, \"g\");\n  var texts = text.split(regex).filter(function (chr) {\n    return chr && chr !== \"undefined\";\n  });\n  var length = texts.length;\n  var values = [];\n  var tempValues = [];\n  function resetTemp() {\n    if (tempValues.length) {\n      values.push(tempValues.join(\"\"));\n      tempValues = [];\n      return true;\n    }\n    return false;\n  }\n  var _loop_2 = function (i) {\n    var character = texts[i].trim();\n    var nextIndex = i;\n    var openCharacter = find(openCloseCharacters, function (_a) {\n      var open = _a.open;\n      return open === character;\n    });\n    var closeCharacter = find(openCloseCharacters, function (_a) {\n      var close = _a.close;\n      return close === character;\n    });\n    if (openCharacter) {\n      nextIndex = findOpen(openCharacter, texts, i, length, openCloseCharacters);\n      if (nextIndex !== -1 && isSeparateOpenClose) {\n        if (resetTemp() && isSeparateFirst) {\n          return out_i_2 = i, \"break\";\n        }\n        values.push(texts.slice(i, nextIndex + 1).join(\"\"));\n        i = nextIndex;\n        if (isSeparateFirst) {\n          return out_i_2 = i, \"break\";\n        }\n        return out_i_2 = i, \"continue\";\n      }\n    } else if (closeCharacter && !findIgnore(closeCharacter, texts, i)) {\n      var nextOpenCloseCharacters = __spreadArrays(openCloseCharacters);\n      nextOpenCloseCharacters.splice(openCloseCharacters.indexOf(closeCharacter), 1);\n      return {\n        value: splitText(text, {\n          separator: separator,\n          isSeparateFirst: isSeparateFirst,\n          isSeparateOnlyOpenClose: isSeparateOnlyOpenClose,\n          isSeparateOpenClose: isSeparateOpenClose,\n          openCloseCharacters: nextOpenCloseCharacters\n        })\n      };\n    } else if (isEqualSeparator(character, separator) && !isSeparateOnlyOpenClose) {\n      resetTemp();\n      if (isSeparateFirst) {\n        return out_i_2 = i, \"break\";\n      }\n      return out_i_2 = i, \"continue\";\n    }\n    if (nextIndex === -1) {\n      nextIndex = length - 1;\n    }\n    tempValues.push(texts.slice(i, nextIndex + 1).join(\"\"));\n    i = nextIndex;\n    out_i_2 = i;\n  };\n  var out_i_2;\n  for (var i = 0; i < length; ++i) {\n    var state_2 = _loop_2(i);\n    i = out_i_2;\n    if (typeof state_2 === \"object\") return state_2.value;\n    if (state_2 === \"break\") break;\n  }\n  if (tempValues.length) {\n    values.push(tempValues.join(\"\"));\n  }\n  return values;\n}\n/**\n* divide text by space.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {Array} divided texts\n* @example\nimport {spliceSpace} from \"@daybrush/utils\";\n\nconsole.log(splitSpace(\"a b c d e f g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitSpace(\"'a,b' c 'd,e' f g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\nfunction splitSpace(text) {\n  // divide comma(space)\n  return splitText(text, \"\");\n}\n/**\n* divide text by comma.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {Array} divided texts\n* @example\nimport {splitComma} from \"@daybrush/utils\";\n\nconsole.log(splitComma(\"a,b,c,d,e,f,g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitComma(\"'a,b',c,'d,e',f,g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\nfunction splitComma(text) {\n  // divide comma(,)\n  // \"[^\"]*\"|'[^']*'\n  return splitText(text, \",\");\n}\n/**\n* divide text by bracket \"(\", \")\".\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {object} divided texts\n* @example\nimport {splitBracket} from \"@daybrush/utils\";\n\nconsole.log(splitBracket(\"a(1, 2)\"));\n// {prefix: \"a\", value: \"1, 2\", suffix: \"\"}\nconsole.log(splitBracket(\"a(1, 2)b\"));\n// {prefix: \"a\", value: \"1, 2\", suffix: \"b\"}\n*/\nfunction splitBracket(text) {\n  var matches = /([^(]*)\\(([\\s\\S]*)\\)([\\s\\S]*)/g.exec(text);\n  if (!matches || matches.length < 4) {\n    return {};\n  } else {\n    return {\n      prefix: matches[1],\n      value: matches[2],\n      suffix: matches[3]\n    };\n  }\n}\n/**\n* divide text by number and unit.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {} divided texts\n* @example\nimport {splitUnit} from \"@daybrush/utils\";\n\nconsole.log(splitUnit(\"10px\"));\n// {prefix: \"\", value: 10, unit: \"px\"}\nconsole.log(splitUnit(\"-10px\"));\n// {prefix: \"\", value: -10, unit: \"px\"}\nconsole.log(splitUnit(\"a10%\"));\n// {prefix: \"a\", value: 10, unit: \"%\"}\n*/\nfunction splitUnit(text) {\n  var matches = /^([^\\d|e|\\-|\\+]*)((?:\\d|\\.|-|e-|e\\+)+)(\\S*)$/g.exec(text);\n  if (!matches) {\n    return {\n      prefix: \"\",\n      unit: \"\",\n      value: NaN\n    };\n  }\n  var prefix = matches[1];\n  var value = matches[2];\n  var unit = matches[3];\n  return {\n    prefix: prefix,\n    unit: unit,\n    value: parseFloat(value)\n  };\n}\n/**\n* transform strings to camel-case\n* @memberof Utils\n* @param {String} text - string\n* @return {String} camel-case string\n* @example\nimport {camelize} from \"@daybrush/utils\";\n\nconsole.log(camelize(\"transform-origin\")); // transformOrigin\nconsole.log(camelize(\"abcd_efg\")); // abcdEfg\nconsole.log(camelize(\"abcd efg\")); // abcdEfg\n*/\nfunction camelize(str) {\n  return str.replace(/[\\s-_]+([^\\s-_])/g, function (all, letter) {\n    return letter.toUpperCase();\n  });\n}\n/**\n* transform a camelized string into a lowercased string.\n* @memberof Utils\n* @param {string} text - a camel-cased string\n* @param {string} [separator=\"-\"] - a separator\n* @return {string}  a lowercased string\n* @example\nimport {decamelize} from \"@daybrush/utils\";\n\nconsole.log(decamelize(\"transformOrigin\")); // transform-origin\nconsole.log(decamelize(\"abcdEfg\", \"_\")); // abcd_efg\n*/\nfunction decamelize(str, separator) {\n  if (separator === void 0) {\n    separator = \"-\";\n  }\n  return str.replace(/([a-z])([A-Z])/g, function (all, letter, letter2) {\n    return \"\" + letter + separator + letter2.toLowerCase();\n  });\n}\n/**\n* transforms something in an array into an array.\n* @memberof Utils\n* @param - Array form\n* @return an array\n* @example\nimport {toArray} from \"@daybrush/utils\";\n\nconst arr1 = toArray(document.querySelectorAll(\".a\")); // Element[]\nconst arr2 = toArray(document.querySelectorAll<HTMLElement>(\".a\")); // HTMLElement[]\n*/\nfunction toArray(value) {\n  return [].slice.call(value);\n}\n/**\n* Date.now() method\n* @memberof CrossBrowser\n* @return {number} milliseconds\n* @example\nimport {now} from \"@daybrush/utils\";\n\nconsole.log(now()); // 12121324241(milliseconds)\n*/\nfunction now() {\n  return Date.now ? Date.now() : new Date().getTime();\n}\n/**\n* Returns the index of the first element in the array that satisfies the provided testing function.\n* @function\n* @memberof CrossBrowser\n* @param - The array `findIndex` was called upon.\n* @param - A function to execute on each value in the array until the function returns true, indicating that the satisfying element was found.\n* @param - Returns defaultIndex if not found by the function.\n* @example\nimport { findIndex } from \"@daybrush/utils\";\n\nfindIndex([{a: 1}, {a: 2}, {a: 3}, {a: 4}], ({ a }) => a === 2); // 1\n*/\nfunction findIndex(arr, callback, defaultIndex) {\n  if (defaultIndex === void 0) {\n    defaultIndex = -1;\n  }\n  var length = arr.length;\n  for (var i = 0; i < length; ++i) {\n    if (callback(arr[i], i, arr)) {\n      return i;\n    }\n  }\n  return defaultIndex;\n}\n/**\n* Returns the reverse direction index of the first element in the array that satisfies the provided testing function.\n* @function\n* @memberof CrossBrowser\n* @param - The array `findLastIndex` was called upon.\n* @param - A function to execute on each value in the array until the function returns true, indicating that the satisfying element was found.\n* @param - Returns defaultIndex if not found by the function.\n* @example\nimport { findLastIndex } from \"@daybrush/utils\";\n\nfindLastIndex([{a: 1}, {a: 2}, {a: 3}, {a: 4}], ({ a }) => a === 2); // 1\n*/\nfunction findLastIndex(arr, callback, defaultIndex) {\n  if (defaultIndex === void 0) {\n    defaultIndex = -1;\n  }\n  var length = arr.length;\n  for (var i = length - 1; i >= 0; --i) {\n    if (callback(arr[i], i, arr)) {\n      return i;\n    }\n  }\n  return defaultIndex;\n}\n/**\n* Returns the value of the reverse direction element in the array that satisfies the provided testing function.\n* @function\n* @memberof CrossBrowser\n* @param - The array `findLast` was called upon.\n* @param - A function to execute on each value in the array,\n* @param - Returns defalutValue if not found by the function.\n* @example\nimport { find } from \"@daybrush/utils\";\n\nfind([{a: 1}, {a: 2}, {a: 3}, {a: 4}], ({ a }) => a === 2); // {a: 2}\n*/\nfunction findLast(arr, callback, defalutValue) {\n  var index = findLastIndex(arr, callback);\n  return index > -1 ? arr[index] : defalutValue;\n}\n/**\n* Returns the value of the first element in the array that satisfies the provided testing function.\n* @function\n* @memberof CrossBrowser\n* @param - The array `find` was called upon.\n* @param - A function to execute on each value in the array,\n* @param - Returns defalutValue if not found by the function.\n* @example\nimport { find } from \"@daybrush/utils\";\n\nfind([{a: 1}, {a: 2}, {a: 3}, {a: 4}], ({ a }) => a === 2); // {a: 2}\n*/\nfunction find(arr, callback, defalutValue) {\n  var index = findIndex(arr, callback);\n  return index > -1 ? arr[index] : defalutValue;\n}\n/**\n* window.requestAnimationFrame() method with cross browser.\n* @function\n* @memberof CrossBrowser\n* @param {FrameRequestCallback} callback - The function to call when it's time to update your animation for the next repaint.\n* @return {number} id\n* @example\nimport {requestAnimationFrame} from \"@daybrush/utils\";\n\nrequestAnimationFrame((timestamp) => {\n  console.log(timestamp);\n});\n*/\nvar requestAnimationFrame = /*#__PURE__*/function () {\n  var firstTime = now();\n  var raf = IS_WINDOW && (window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame);\n  return raf ? raf.bind(window) : function (callback) {\n    var currTime = now();\n    var id = setTimeout(function () {\n      callback(currTime - firstTime);\n    }, 1000 / 60);\n    return id;\n  };\n}();\n/**\n* window.cancelAnimationFrame() method with cross browser.\n* @function\n* @memberof CrossBrowser\n* @param {number} handle - the id obtained through requestAnimationFrame method\n* @return {void}\n* @example\nimport { requestAnimationFrame, cancelAnimationFrame } from \"@daybrush/utils\";\n\nconst id = requestAnimationFrame((timestamp) => {\n  console.log(timestamp);\n});\n\ncancelAnimationFrame(id);\n*/\nvar cancelAnimationFrame = /*#__PURE__*/function () {\n  var caf = IS_WINDOW && (window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.msCancelAnimationFrame);\n  return caf ? caf.bind(window) : function (handle) {\n    clearTimeout(handle);\n  };\n}();\n/**\n* @function\n* @memberof Utils\n*/\nfunction getKeys(obj) {\n  return Object.keys(obj);\n}\n/**\n* @function\n* @memberof Utils\n*/\nfunction getValues(obj) {\n  var keys = getKeys(obj);\n  return keys.map(function (key) {\n    return obj[key];\n  });\n}\n/**\n* @function\n* @memberof Utils\n*/\nfunction getEntries(obj) {\n  var keys = getKeys(obj);\n  return keys.map(function (key) {\n    return [key, obj[key]];\n  });\n}\n/**\n* @function\n* @memberof Utils\n*/\nfunction sortOrders(keys, orders) {\n  if (orders === void 0) {\n    orders = [];\n  }\n  keys.sort(function (a, b) {\n    var index1 = orders.indexOf(a);\n    var index2 = orders.indexOf(b);\n    if (index2 === -1 && index1 === -1) {\n      return 0;\n    }\n    if (index1 === -1) {\n      return 1;\n    }\n    if (index2 === -1) {\n      return -1;\n    }\n    return index1 - index2;\n  });\n}\n/**\n* convert unit size to px size\n* @function\n* @memberof Utils\n*/\nfunction convertUnitSize(pos, size) {\n  var _a = splitUnit(pos),\n    value = _a.value,\n    unit = _a.unit;\n  if (isObject(size)) {\n    var sizeFunction = size[unit];\n    if (sizeFunction) {\n      if (isFunction(sizeFunction)) {\n        return sizeFunction(value);\n      } else if (DEFAULT_UNIT_PRESETS[unit]) {\n        return DEFAULT_UNIT_PRESETS[unit](value, sizeFunction);\n      }\n    }\n  } else if (unit === \"%\") {\n    return value * size / 100;\n  }\n  if (DEFAULT_UNIT_PRESETS[unit]) {\n    return DEFAULT_UNIT_PRESETS[unit](value);\n  }\n  return value;\n}\n/**\n* calculate between min, max\n* @function\n* @memberof Utils\n*/\nfunction between(value, min, max) {\n  return Math.max(min, Math.min(value, max));\n}\nfunction checkBoundSize(targetSize, compareSize, isMax, ratio) {\n  if (ratio === void 0) {\n    ratio = targetSize[0] / targetSize[1];\n  }\n  return [[throttle(compareSize[0], TINY_NUM), throttle(compareSize[0] / ratio, TINY_NUM)], [throttle(compareSize[1] * ratio, TINY_NUM), throttle(compareSize[1], TINY_NUM)]].filter(function (size) {\n    return size.every(function (value, i) {\n      var defaultSize = compareSize[i];\n      var throttledSize = throttle(defaultSize, TINY_NUM);\n      return isMax ? value <= defaultSize || value <= throttledSize : value >= defaultSize || value >= throttledSize;\n    });\n  })[0] || targetSize;\n}\n/**\n* calculate bound size\n* @function\n* @memberof Utils\n*/\nfunction calculateBoundSize(size, minSize, maxSize, keepRatio) {\n  if (!keepRatio) {\n    return size.map(function (value, i) {\n      return between(value, minSize[i], maxSize[i]);\n    });\n  }\n  var width = size[0],\n    height = size[1];\n  var ratio = keepRatio === true ? width / height : keepRatio;\n  // width : height = minWidth : minHeight;\n  var _a = checkBoundSize(size, minSize, false, ratio),\n    minWidth = _a[0],\n    minHeight = _a[1];\n  var _b = checkBoundSize(size, maxSize, true, ratio),\n    maxWidth = _b[0],\n    maxHeight = _b[1];\n  if (width < minWidth || height < minHeight) {\n    width = minWidth;\n    height = minHeight;\n  } else if (width > maxWidth || height > maxHeight) {\n    width = maxWidth;\n    height = maxHeight;\n  }\n  return [width, height];\n}\n/**\n* Add all the numbers.\n* @function\n* @memberof Utils\n*/\nfunction sum(nums) {\n  var length = nums.length;\n  var total = 0;\n  for (var i = length - 1; i >= 0; --i) {\n    total += nums[i];\n  }\n  return total;\n}\n/**\n* Average all numbers.\n* @function\n* @memberof Utils\n*/\nfunction average(nums) {\n  var length = nums.length;\n  var total = 0;\n  for (var i = length - 1; i >= 0; --i) {\n    total += nums[i];\n  }\n  return length ? total / length : 0;\n}\n/**\n* Get the angle of two points. (0 <= rad < 359)\n* @function\n* @memberof Utils\n*/\nfunction getRad(pos1, pos2) {\n  var distX = pos2[0] - pos1[0];\n  var distY = pos2[1] - pos1[1];\n  var rad = Math.atan2(distY, distX);\n  return rad >= 0 ? rad : rad + Math.PI * 2;\n}\n/**\n* Get the average point of all points.\n* @function\n* @memberof Utils\n*/\nfunction getCenterPoint(points) {\n  return [0, 1].map(function (i) {\n    return average(points.map(function (pos) {\n      return pos[i];\n    }));\n  });\n}\n/**\n* Gets the direction of the shape.\n* @function\n* @memberof Utils\n*/\nfunction getShapeDirection(points) {\n  var center = getCenterPoint(points);\n  var pos1Rad = getRad(center, points[0]);\n  var pos2Rad = getRad(center, points[1]);\n  return pos1Rad < pos2Rad && pos2Rad - pos1Rad < Math.PI || pos1Rad > pos2Rad && pos2Rad - pos1Rad < -Math.PI ? 1 : -1;\n}\n/**\n* Get the distance between two points.\n* @function\n* @memberof Utils\n*/\nfunction getDist(a, b) {\n  return Math.sqrt(Math.pow((b ? b[0] : 0) - a[0], 2) + Math.pow((b ? b[1] : 0) - a[1], 2));\n}\n/**\n* throttle number depending on the unit.\n* @function\n* @memberof Utils\n*/\nfunction throttle(num, unit) {\n  if (!unit) {\n    return num;\n  }\n  var reverseUnit = 1 / unit;\n  return Math.round(num / unit) / reverseUnit;\n}\n/**\n* throttle number array depending on the unit.\n* @function\n* @memberof Utils\n*/\nfunction throttleArray(nums, unit) {\n  nums.forEach(function (_, i) {\n    nums[i] = throttle(nums[i], unit);\n  });\n  return nums;\n}\n/**\n* @function\n* @memberof Utils\n*/\nfunction counter(num) {\n  var nums = [];\n  for (var i = 0; i < num; ++i) {\n    nums.push(i);\n  }\n  return nums;\n}\n/**\n* @function\n* @memberof Utils\n*/\nfunction replaceOnce(text, fromText, toText) {\n  var isOnce = false;\n  return text.replace(fromText, function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    if (isOnce) {\n      return args[0];\n    }\n    isOnce = true;\n    return isString(toText) ? toText : toText.apply(void 0, args);\n  });\n}\n/**\n* @function\n* @memberof Utils\n*/\nfunction flat(arr) {\n  return arr.reduce(function (prev, cur) {\n    return prev.concat(cur);\n  }, []);\n}\n/**\n* @function\n* @memberof Utils\n*/\nfunction deepFlat(arr) {\n  return arr.reduce(function (prev, cur) {\n    if (isArray(cur)) {\n      prev.push.apply(prev, deepFlat(cur));\n    } else {\n      prev.push(cur);\n    }\n    return prev;\n  }, []);\n}\n/**\n * @function\n * @memberof Utils\n */\nfunction pushSet(elements, element) {\n  if (elements.indexOf(element) === -1) {\n    elements.push(element);\n  }\n}\n\n/**\n* @namespace\n* @name Color\n*/\n/**\n* Remove the # from the hex color.\n* @memberof Color\n* @param {} hex - hex color\n* @return {} hex color\n* @example\nimport {cutHex} from \"@daybrush/utils\";\n\nconsole.log(cutHex(\"#000000\")) // \"000000\"\n*/\nfunction cutHex(hex) {\n  return hex.replace(\"#\", \"\");\n}\n/**\n* convert hex color to rgb color.\n* @memberof Color\n* @param {} hex - hex color\n* @return {} rgb color\n* @example\nimport {hexToRGBA} from \"@daybrush/utils\";\n\nconsole.log(hexToRGBA(\"#00000005\"));\n// [0, 0, 0, 1]\nconsole.log(hexToRGBA(\"#201045\"));\n// [32, 16, 69, 1]\n*/\nfunction hexToRGBA(hex) {\n  var h = cutHex(hex);\n  var r = parseInt(h.substring(0, 2), 16);\n  var g = parseInt(h.substring(2, 4), 16);\n  var b = parseInt(h.substring(4, 6), 16);\n  var a = parseInt(h.substring(6, 8), 16) / 255;\n  if (isNaN(a)) {\n    a = 1;\n  }\n  return [r, g, b, a];\n}\n/**\n* convert 3(or 4)-digit hex color to 6(or 8)-digit hex color.\n* @memberof Color\n* @param {} hex - 3(or 4)-digit hex color\n* @return {} 6(or 8)-digit hex color\n* @example\nimport {toFullHex} from \"@daybrush/utils\";\n\nconsole.log(toFullHex(\"#123\")); // \"#112233\"\nconsole.log(toFullHex(\"#123a\")); // \"#112233aa\"\n*/\nfunction toFullHex(h) {\n  var r = h.charAt(1);\n  var g = h.charAt(2);\n  var b = h.charAt(3);\n  var a = h.charAt(4);\n  var arr = [\"#\", r, r, g, g, b, b, a, a];\n  return arr.join(\"\");\n}\n/**\n* convert hsl color to rgba color.\n* @memberof Color\n* @param {} hsl - hsl color(hue: 0 ~ 360, saturation: 0 ~ 1, lightness: 0 ~ 1, alpha: 0 ~ 1)\n* @return {} rgba color\n* @example\nimport {hslToRGBA} from \"@daybrush/utils\";\n\nconsole.log(hslToRGBA([150, 0.5, 0.4]));\n// [51, 153, 102, 1]\n*/\nfunction hslToRGBA(hsl) {\n  var _a;\n  var h = hsl[0];\n  var s = hsl[1];\n  var l = hsl[2];\n  if (h < 0) {\n    h += Math.floor((Math.abs(h) + 360) / 360) * 360;\n  }\n  h %= 360;\n  var c = (1 - Math.abs(2 * l - 1)) * s;\n  var x = c * (1 - Math.abs(h / 60 % 2 - 1));\n  var m = l - c / 2;\n  var rgb;\n  if (h < 60) {\n    rgb = [c, x, 0];\n  } else if (h < 120) {\n    rgb = [x, c, 0];\n  } else if (h < 180) {\n    rgb = [0, c, x];\n  } else if (h < 240) {\n    rgb = [0, x, c];\n  } else if (h < 300) {\n    rgb = [x, 0, c];\n  } else if (h < 360) {\n    rgb = [c, 0, x];\n  } else {\n    rgb = [0, 0, 0];\n  }\n  return [Math.round((rgb[0] + m) * 255), Math.round((rgb[1] + m) * 255), Math.round((rgb[2] + m) * 255), (_a = hsl[3]) !== null && _a !== void 0 ? _a : 1];\n}\n/**\n* convert string to rgba color.\n* @memberof Color\n* @param {} - 3-hex(#000), 4-hex(#0000) 6-hex(#000000), 8-hex(#00000000) or RGB(A), or HSL(A)\n* @return {} rgba color\n* @example\nimport {stringToRGBA} from \"@daybrush/utils\";\n\nconsole.log(stringToRGBA(\"#000000\")); // [0, 0, 0, 1]\nconsole.log(stringToRGBA(\"rgb(100, 100, 100)\")); // [100, 100, 100, 1]\nconsole.log(stringToRGBA(\"hsl(150, 0.5, 0.4)\")); // [51, 153, 102, 1]\n*/\nfunction stringToRGBA(color) {\n  if (color.charAt(0) === \"#\") {\n    if (color.length === 4 || color.length === 5) {\n      return hexToRGBA(toFullHex(color));\n    } else {\n      return hexToRGBA(color);\n    }\n  } else if (color.indexOf(\"(\") !== -1) {\n    // in bracket.\n    var _a = splitBracket(color),\n      prefix = _a.prefix,\n      value = _a.value;\n    if (!prefix || !value) {\n      return undefined;\n    }\n    var arr = splitComma(value);\n    var colorArr = [0, 0, 0, 1];\n    var length = arr.length;\n    switch (prefix) {\n      case RGB:\n      case RGBA:\n        for (var i = 0; i < length; ++i) {\n          colorArr[i] = parseFloat(arr[i]);\n        }\n        return colorArr;\n      case HSL:\n      case HSLA:\n        for (var i = 0; i < length; ++i) {\n          if (arr[i].indexOf(\"%\") !== -1) {\n            colorArr[i] = parseFloat(arr[i]) / 100;\n          } else {\n            colorArr[i] = parseFloat(arr[i]);\n          }\n        }\n        // hsl, hsla to rgba\n        return hslToRGBA(colorArr);\n    }\n  }\n  return undefined;\n}\n\n/**\n * Returns all element descendants of node that\n * match selectors.\n */\n/**\n * Checks if the specified class value exists in the element's class attribute.\n * @memberof DOM\n * @param - A DOMString containing one or more selectors to match\n * @param - If multi is true, a DOMString containing one or more selectors to match against.\n * @example\nimport {$} from \"@daybrush/utils\";\n\nconsole.log($(\"div\")); // div element\nconsole.log($(\"div\", true)); // [div, div] elements\n*/\nfunction $(selectors, multi) {\n  if (!doc) {\n    return multi ? [] : null;\n  }\n  return multi ? doc.querySelectorAll(selectors) : doc.querySelector(selectors);\n}\n/**\n* Checks if the specified class value exists in the element's class attribute.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to search\n* @return {boolean} return false if the class is not found.\n* @example\nimport {hasClass} from \"@daybrush/utils\";\n\nconsole.log(hasClass(element, \"start\")); // true or false\n*/\nfunction hasClass(element, className) {\n  if (element.classList) {\n    return element.classList.contains(className);\n  }\n  return !!element.className.match(new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\"));\n}\n/**\n* Add the specified class value. If these classe already exist in the element's class attribute they are ignored.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to add\n* @example\nimport {addClass} from \"@daybrush/utils\";\n\naddClass(element, \"start\");\n*/\nfunction addClass(element, className) {\n  if (element.classList) {\n    element.classList.add(className);\n  } else {\n    element.className += \" \" + className;\n  }\n}\n/**\n* Removes the specified class value.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to remove\n* @example\nimport {removeClass} from \"@daybrush/utils\";\n\nremoveClass(element, \"start\");\n*/\nfunction removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else {\n    var reg = new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\");\n    element.className = element.className.replace(reg, \" \");\n  }\n}\n/**\n* Gets the CSS properties from the element.\n* @memberof DOM\n* @param elements - elements\n* @param properites - the CSS properties\n* @return returns CSS properties and values.\n* @example\nimport {fromCSS} from \"@daybrush/utils\";\n\nconsole.log(fromCSS(element, [\"left\", \"opacity\", \"top\"])); // {\"left\": \"10px\", \"opacity\": 1, \"top\": \"10px\"}\n*/\nfunction fromCSS(elements, properties) {\n  if (!elements || !properties || !properties.length) {\n    return {};\n  }\n  var element;\n  if (elements instanceof Element) {\n    element = elements;\n  } else if (elements.length) {\n    element = elements[0];\n  } else {\n    return {};\n  }\n  var cssObject = {};\n  var styles = getWindow(element).getComputedStyle(element);\n  var length = properties.length;\n  for (var i = 0; i < length; ++i) {\n    cssObject[properties[i]] = styles[properties[i]];\n  }\n  return cssObject;\n}\n/**\n* Sets up a function that will be called whenever the specified event is delivered to the target\n* @memberof DOM\n* @param - event target\n* @param - A case-sensitive string representing the event type to listen for.\n* @param - The object which receives a notification (an object that implements the Event interface) when an event of the specified type occurs\n* @param - An options object that specifies characteristics about the event listener.\n* @example\nimport {addEvent} from \"@daybrush/utils\";\n\naddEvent(el, \"click\", e => {\n  console.log(e);\n});\n*/\nfunction addEvent(el, type, listener, options) {\n  el.addEventListener(type, listener, options);\n}\n/**\n* removes from the EventTarget an event listener previously registered with EventTarget.addEventListener()\n* @memberof DOM\n* @param - event target\n* @param - A case-sensitive string representing the event type to listen for.\n* @param - The EventListener function of the event handler to remove from the event target.\n* @param - An options object that specifies characteristics about the event listener.\n* @example\nimport {addEvent, removeEvent} from \"@daybrush/utils\";\nconst listener = e => {\n  console.log(e);\n};\naddEvent(el, \"click\", listener);\nremoveEvent(el, \"click\", listener);\n*/\nfunction removeEvent(el, type, listener, options) {\n  el.removeEventListener(type, listener, options);\n}\nfunction getDocument(el) {\n  return (el === null || el === void 0 ? void 0 : el.ownerDocument) || doc;\n}\nfunction getDocumentElement(el) {\n  return getDocument(el).documentElement;\n}\nfunction getDocumentBody(el) {\n  return getDocument(el).body;\n}\nfunction getWindow(el) {\n  var _a;\n  return ((_a = el === null || el === void 0 ? void 0 : el.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView) || window;\n}\nfunction isWindow(val) {\n  return val && \"postMessage\" in val && \"blur\" in val && \"self\" in val;\n}\nfunction isNode(el) {\n  return isObject(el) && el.nodeName && el.nodeType && \"ownerDocument\" in el;\n}\n\nexport { RGB, RGBA, HSL, HSLA, COLOR_MODELS, FUNCTION, PROPERTY, ARRAY, OBJECT, STRING, NUMBER, UNDEFINED, IS_WINDOW, doc as document, getCrossBrowserProperty, TRANSFORM, FILTER, ANIMATION, KEYFRAMES, OPEN_CLOSED_CHARACTERS, TINY_NUM, REVERSE_TINY_NUM, DEFAULT_UNIT_PRESETS, cutHex, hexToRGBA, toFullHex, hslToRGBA, stringToRGBA, dot, isUndefined, isObject, isArray, isString, isNumber, isFunction, splitText, splitSpace, splitComma, splitBracket, splitUnit, camelize, decamelize, toArray, now, findIndex, findLastIndex, findLast, find, requestAnimationFrame, cancelAnimationFrame, getKeys, getValues, getEntries, sortOrders, convertUnitSize, between, checkBoundSize, calculateBoundSize, sum, average, getRad, getCenterPoint, getShapeDirection, getDist, throttle, throttleArray, counter, replaceOnce, flat, deepFlat, pushSet, $, hasClass, addClass, removeClass, fromCSS, addEvent, removeEvent, getDocument, getDocumentElement, getDocumentBody, getWindow, isWindow, isNode };\n//# sourceMappingURL=utils.esm.js.map\n","import { isArray, deepFlat, find } from \"@daybrush/utils\";\nimport { GroupChild, TargetGroupsObject, TargetGroupsType } from \"./types\";\n\nexport class Child {\n    public type: \"group\" | \"root\" | \"single\" = \"single\";\n    public depth = 0;\n    protected _scope: string[] = [];\n    constructor(public parent?: ArrayChild) {\n        if (parent) {\n            this.depth = parent.depth + 1;\n        }\n    }\n\n    public get scope(): string[] {\n        const parent = this.parent;\n\n        if (!parent || parent.type === \"root\") {\n            return [];\n        }\n        return [...parent.scope, parent.id];\n    }\n}\n\nexport class SingleChild extends Child {\n    public type = \"single\" as const;\n    public isGroupElement = false;\n    constructor(parent: ArrayChild, public value: HTMLElement | SVGElement) {\n        super(parent);\n    }\n}\n\n\nexport class ArrayChild extends Child {\n    public type: \"group\" | \"root\" = \"group\";\n    public value: GroupChild[] = [];\n    public id = \"\";\n    public groupElement?: HTMLElement | SVGElement | null = null;\n    public map: Map<HTMLElement | SVGElement, SingleChild> = new Map();\n\n    public compare(groups: TargetGroupsType, checker: -1 | 0 | 1 = 0) {\n        const elements = deepFlat(groups);\n        const map = this.map;\n        const elementsLength = elements.length;\n        const mapSize = map.size;\n        const sizeDiff = mapSize - elementsLength;\n\n        // 1 this > groups\n        // 0 this = groups\n        // -1 this < groups\n        const count = elements.filter(element => map.has(element)).length;\n\n        if ((checker > 0 && sizeDiff >= 0) || (checker === 0 && sizeDiff === 0)) {\n            return elementsLength === count;\n        } else if (checker < 0 && sizeDiff <= 0) {\n            return mapSize === count;\n        }\n        return false;\n    }\n    public has(target: HTMLElement | SVGElement) {\n        return this.map.has(target);\n    }\n    public contains(element: HTMLElement | SVGElement): boolean {\n        if (this.has(element)) {\n            return true;\n        }\n        return this.value.some(child => {\n            if (child.type === \"group\") {\n                return child.contains(element);\n            } else {\n                return false;\n            }\n        });\n    }\n    public findContainedChild(element: HTMLElement | SVGElement) {\n        return find(this.value, child => {\n            if (child.type === \"single\") {\n                return child.value === element;\n            } else {\n                return child.contains(element);\n            }\n        });\n    }\n    /**\n     * Exact group containing targets\n     */\n    public findExactChild(target: TargetGroupsType[0]): GroupChild | undefined {\n        const map = this.map;\n\n        if (!isArray(target)) {\n            return map.get(target);\n        }\n        const flatted = deepFlat(target);\n        const length = flatted.length;\n        const single = map.get(flatted[0]);\n\n        if (!single) {\n            return;\n        }\n\n        let parent: ArrayChild | undefined = single.parent;\n\n        while (parent) {\n            if (parent.map.size >= length) {\n                return parent;\n            }\n            parent = parent.parent;\n        }\n        return;\n    }\n    public findCommonParent(targets: TargetGroupsType): ArrayChild {\n        let depth = Infinity;\n        let childs = targets.map(target => this.findExactChild(target));\n\n        childs.forEach(child => {\n            if (!child) {\n                return;\n            }\n            depth = Math.min(child.depth, depth);\n        });\n\n        while (depth) {\n            --depth;\n            childs = childs.map(child => {\n                let parent: GroupChild | undefined = child;\n\n                while (parent && parent.depth !== depth) {\n                    parent = parent.parent;\n                }\n\n                return parent;\n            });\n            const firstChild = childs.find(child => child);\n\n            if (!firstChild) {\n                return this;\n            }\n            if (childs.every(child => !child || child === firstChild)) {\n                break;\n            }\n        }\n        const commonParent = childs.find(child => child) as ArrayChild;\n\n        return commonParent || this;\n    }\n    public findNextChild(\n        target: HTMLElement | SVGElement,\n        range: TargetGroupsType = this.toTargetGroups(),\n        isExact = true,\n    ): ArrayChild | null {\n        let nextChild: ArrayChild | null = null;\n\n        const length = range.length;\n\n        range.some(child => {\n            if (!isExact && length === 1 && isArray(child)) {\n                nextChild = this.findNextChild(target, child);\n                return nextChild;\n            }\n\n\n            const nextGroupChild = this.findExactChild(child);\n\n            if (!nextGroupChild) {\n                return;\n            }\n\n            if (\"map\" in nextGroupChild) {\n                if (nextGroupChild.map.has(target)) {\n                    nextChild = nextGroupChild;\n                    return true;\n                }\n            }\n        });\n\n        return nextChild;\n    }\n    public findNextExactChild(\n        target: HTMLElement | SVGElement,\n        selected: Array<HTMLElement | SVGElement>,\n        range: TargetGroupsType = this.toTargetGroups(),\n    ): ArrayChild | null {\n        // [[1, 2]] => group([1, 2]) exact\n        // [[[1, 2], 3]] => group([1, 2])\n        const nextChild = this.findNextChild(target, range, true);\n\n        if (!nextChild) {\n            return null;\n        }\n\n        if (nextChild.compare(selected, -1)) {\n            return nextChild;\n        }\n        return null;\n    }\n    /**\n     * Finds a group that does not overlap within the range and includes the target.\n     */\n    public findPureChild(\n        target: HTMLElement | SVGElement,\n        range: Array<HTMLElement | SVGElement>,\n    ): ArrayChild | null {\n        let nextGroupChild: ArrayChild | null = null;\n\n        const childSelected = range.filter(element => this.has(element));\n\n        if (!childSelected.length) {\n            return this;\n        }\n\n        this.value.some(nextChild => {\n            if (nextChild.type !== \"single\" && nextChild.has(target)) {\n                nextGroupChild = nextChild.findPureChild(target, childSelected);\n\n                if (nextGroupChild) {\n                    return true;\n                }\n            }\n        });\n\n        return nextGroupChild;\n    }\n    public findNextPureChild(\n        target: HTMLElement | SVGElement,\n        range: Array<HTMLElement | SVGElement>,\n    ): ArrayChild | null {\n        const nextChild = this.findNextChild(target);\n\n        if (nextChild) {\n            return nextChild.findPureChild(target, range);\n        }\n        return null;\n    }\n    public getSingleChild(): SingleChild | null {\n        const groupElement = this.groupElement;\n\n        if (groupElement) {\n            const singleChild = this.parent?.value.find(t => t.value === groupElement);\n\n            if (singleChild) {\n                return singleChild as SingleChild;\n            }\n        }\n        return null;\n    }\n    public toTargetGroups(): TargetGroupsType {\n        return this.value.map(child => {\n            if (child.type === \"single\") {\n                return child.value;\n            } else {\n                return child.toTargetGroups();\n            }\n        });\n    }\n    public findArrayChild(targets: TargetGroupsType): ArrayChild | null {\n        const {\n            value,\n        } = this;\n\n        let result = false;\n\n        if (this.type !== \"root\") {\n            result = value.every(child => {\n                if (child.type === \"single\")  {\n                    return targets.some(target => child.value === target);\n                } else {\n                    return targets.some(target => {\n                        return isArray(target) && child.findArrayChild(target);\n                    });\n                }\n            });\n            // result = targets.every(target => {\n            //     if (isArray(target)) {\n            //         return value.some(child => {\n            //             return child.type === \"group\" && child.findArrayChild(target);\n            //         });\n            //     } else {\n            //         return map.get(target);\n            //     }\n            // });\n        }\n\n        if (result && targets.length === value.length) {\n            return this;\n        } else {\n            let childResult: ArrayChild | null = null;\n\n            value.some(child => {\n                if (child.type === \"group\") {\n                    childResult = child.findArrayChild(targets);\n\n                    return childResult;\n                }\n            });\n\n            return childResult;\n        }\n    }\n    public groupByPerfect(selected: Array<HTMLElement | SVGElement>) {\n        return this.value.filter(child => {\n            if (child.type !== \"single\") {\n                return child.compare(selected, -1);\n            }\n            return selected.indexOf(child.value) > -1;\n        }).map(child => {\n            if (child.type !== \"single\") {\n                const singleChild = child.getSingleChild();\n\n                if (singleChild) {\n                    return singleChild;\n                }\n            }\n            return child;\n        });\n    }\n    public add(targets: TargetGroupsObject) {\n        const {\n            value,\n            map,\n        } = this;\n\n        targets.forEach(child => {\n            if (\"groupId\" in child) {\n                const group = new ArrayChild(this);\n\n                group.id = child.groupId;\n                value.push(group);\n                group.add(child.children);\n            } else if (isArray(child)) {\n                const group = new ArrayChild(this);\n\n                value.push(group);\n                group.add(child);\n            } else {\n                const element = \"current\" in child ? child.current : child;\n                const single = new SingleChild(this, element!);\n\n                value.push(single);\n                map.set(element!, single);\n            }\n        });\n\n        value.forEach(child => {\n            if (child.type === \"single\") {\n                map.set(child.value, child);\n            } else {\n                child.map.forEach((nextChild, element) => {\n                    map.set(element, nextChild);\n                });\n            }\n        });\n\n        value.forEach(child => {\n            if  (child.type !== \"single\") {\n                return;\n            }\n            // single\n            const singleElement = child.value;\n            const groupChild = value.find(child2 => {\n                if (child2.type === \"single\") {\n                    return;\n                }\n                const firstElement = [...child2.map.keys()][0];\n\n                if (!firstElement) {\n                    return;\n                }\n\n                return singleElement.contains(firstElement);\n            });\n\n            (child as SingleChild).isGroupElement = !!groupChild;\n\n            if (groupChild) {\n                (groupChild as ArrayChild).groupElement = child.value;\n            }\n        });\n        return parent;\n    }\n}\n","/* eslint-disable no-cond-assign */\nimport { deepFlat, isArray } from \"@daybrush/utils\";\nimport { ArrayChild, SingleChild } from \"./groups\";\nimport { GroupChild, TargetGroupsObject, TargetGroupsType, TargetList } from \"./types\";\n\n\nexport function toTargetList(raw: GroupChild[]): TargetList {\n    function targets(childs: GroupChild[] = []) {\n        const arr: TargetGroupsType = [];\n\n        childs.forEach((child) => {\n            if (child.type === \"single\") {\n                arr.push(child.value);\n            } else {\n                arr.push(targets(child.value));\n            }\n        });\n\n        return arr;\n    }\n\n    return {\n        raw: () => raw,\n        targets() {\n            return targets(this.raw());\n        },\n        flatten() {\n            return deepFlat(this.targets());\n        },\n    };\n}\n\nexport class GroupManager extends ArrayChild {\n    public type = \"root\" as const;\n    private _targets:  Array<HTMLElement | SVGElement> = [];\n\n    constructor(\n        targetGroups: TargetGroupsType,\n        targets?: Array<HTMLElement | SVGElement>,\n    ) {\n        super();\n        this.set(targetGroups, targets);\n    }\n    public set(\n        targetGroups: TargetGroupsObject,\n        targets: Array<HTMLElement | SVGElement> = [],\n    ) {\n        this.map = new Map();\n        this.value = [];\n\n        const map = this.map;\n        const value = this.value;\n\n        this.add(targetGroups);\n        targets.forEach(target => {\n            if (map.has(target)) {\n                return;\n            }\n            const single = new SingleChild(this, target);\n\n            single.depth = 1;\n            value.push(single);\n            map.set(target, single);\n        });\n        this._targets = targets;\n    }\n    public selectSubChilds(targets: TargetGroupsType, target: HTMLElement | SVGElement) {\n        const root = this;\n        const nextChild = root.findNextChild(target, targets, false);\n        const targetChild = root.map.get(target);\n\n        let nextChilds: GroupChild[] = [];\n\n        if (nextChild) {\n            nextChilds = [nextChild];\n        } else if (targetChild) {\n            nextChilds = [targetChild];\n        } else {\n            nextChilds = [];\n        }\n\n        return toTargetList(nextChilds);\n    }\n    public selectSingleChilds(\n        targets: TargetGroupsType,\n        added: Array<HTMLElement | SVGElement>,\n        removed: Array<HTMLElement | SVGElement>,\n    ) {\n        const nextTargets = [...targets];\n\n        // group can't be added, removed.\n        removed.forEach(element => {\n            const index = nextTargets.indexOf(element);\n\n            if (index > -1) {\n                nextTargets.splice(index, 1);\n            }\n        });\n\n        // Targets can be added one by one\n        added.forEach(element => {\n            nextTargets.push(element);\n        });\n\n        return toTargetList(this.toChilds(nextTargets));\n    }\n    public selectCompletedChilds(\n        targets: TargetGroupsType,\n        added: Array<HTMLElement | SVGElement>,\n        removed: Array<HTMLElement | SVGElement>,\n        continueSelect?: boolean,\n    ) {\n        const nextTargets = [...targets];\n        const startSelected = deepFlat(nextTargets);\n\n        // group can be added, removed.\n        removed.forEach(element => {\n            // Single Target\n            const index = nextTargets.indexOf(element);\n\n            if (index > -1) {\n                // single target or group\n                nextTargets.splice(index, 1);\n                return;\n            }\n            // Group Target\n            const removedChild = continueSelect\n                // Finds the nearest child for element and nextTargets.\n                ? this.findNextChild(element, nextTargets)\n                // Find the nearest exact child for element, all removed and nextTargets.\n                : this.findNextExactChild(element, removed, nextTargets);\n\n            if (removedChild) {\n                const groupIndex = nextTargets.findIndex(target => {\n                    return isArray(target) && removedChild.compare(target);\n                });\n\n                if (groupIndex > -1) {\n                    nextTargets.splice(groupIndex, 1);\n                }\n            }\n        });\n\n        added.forEach(element => {\n            const parentGroup = this._findParentGroup(element, startSelected);\n            const nextChild = parentGroup.findContainedChild(element);\n\n            if (nextChild?.type === \"group\") {\n                const singleChild = nextChild.getSingleChild();\n\n                if (singleChild) {\n                    nextTargets.push(singleChild.value);\n                } else {\n                    nextTargets.push(nextChild.toTargetGroups());\n                }\n                return;\n            }\n            nextTargets.push(element);\n        });\n        return toTargetList(this.toChilds(nextTargets));\n    }\n    public selectSameDepthChilds(\n        targets: TargetGroupsType,\n        added: Array<HTMLElement | SVGElement>,\n        removed: Array<HTMLElement | SVGElement>,\n        continueSelect?: boolean,\n    ) {\n        const nextTargets = [...targets];\n        const commonParent = this.findCommonParent(nextTargets);\n\n        removed.forEach(element => {\n            // Single Target\n            const index = nextTargets.indexOf(element);\n\n            if (index > -1) {\n                // single target or group\n                nextTargets.splice(index, 1);\n                return;\n            }\n            const removedChild = continueSelect\n                // Find the nearest exact child for element, all removed and nextTargets.\n                ? commonParent.findNextExactChild(element, removed, nextTargets)\n                // Finds the nearest child for element and nextTargets.\n                : commonParent.findNextChild(element, nextTargets, true);\n\n            if (removedChild) {\n                const groupIndex = nextTargets.findIndex(target => {\n                    return isArray(target) && removedChild.compare(target);\n                });\n\n                if (groupIndex > -1) {\n                    nextTargets.splice(groupIndex, 1);\n                }\n            }\n        });\n        const addedChildren = commonParent.groupByPerfect(added);\n\n        addedChildren.forEach(child => {\n            if (child.type === \"single\") {\n                nextTargets.push(child.value);\n            } else {\n                const groupIndex = nextTargets.findIndex(target => {\n                    return isArray(target) && child.compare(target, 1);\n                });\n\n                if (groupIndex > -1) {\n                    nextTargets.splice(groupIndex, 1);\n                }\n                nextTargets.push(child.toTargetGroups());\n            }\n        });\n        return toTargetList(this.toChilds(nextTargets));\n    }\n    public toChilds(targets: TargetGroupsType): GroupChild[] {\n        const childs: GroupChild[] = [];\n\n        targets.forEach(target => {\n            if (isArray(target)) {\n                const arrayChild = this.findArrayChild(target);\n\n                if (arrayChild) {\n                    const singleChild = arrayChild.getSingleChild();\n\n                    if (singleChild) {\n                        return singleChild;\n                    }\n                    childs.push(arrayChild);\n                }\n            } else {\n                const single = this.map.get(target);\n\n                if (single) {\n                    childs.push(single);\n                } else {\n                    childs.push(new SingleChild(this, target));\n                }\n            }\n        });\n\n        return childs;\n    }\n    public findChild(element: HTMLElement | SVGElement, isAuto: true): SingleChild | ArrayChild;\n    public findChild(\n        element: HTMLElement | SVGElement,\n        isAuto?: boolean,\n    ): SingleChild | ArrayChild | undefined;\n    public findChild(\n        element: HTMLElement | SVGElement,\n        isAuto?: boolean,\n    ): SingleChild | ArrayChild | undefined {\n        const value = this.map.get(element);\n\n        if (isAuto) {\n            return value || new SingleChild(this, element);\n        }\n        return value;\n    }\n    public findArrayChildById(id: string): ArrayChild | null {\n        let value: ArrayChild | null = null;\n\n        this.value.some(function find(child: GroupChild) {\n            if (child.type !== \"single\") {\n                if (child.id === id) {\n                    value = child;\n                    return true;\n                } else {\n                    return child.value.some(find);\n                }\n            }\n        });\n\n        return value;\n    }\n    public group(targets: TargetGroupsType, flatten?: boolean): TargetGroupsType | null {\n        const commonParent = this.findCommonParent(targets);\n        const groupChilds = targets.map(target => {\n            if (isArray(target)) {\n                return this.findArrayChild(target);\n            }\n            return this.findChild(target);\n        });\n        const isGroupable = groupChilds.every(child => child?.parent === commonParent);\n\n        if (!isGroupable) {\n            return null;\n        }\n        const group = new ArrayChild(commonParent);\n        const nextChilds = commonParent.value.filter(target => groupChilds.indexOf(target) === -1);\n\n        if (!nextChilds.length) {\n            return null;\n        }\n        nextChilds.unshift(group);\n        group.add(flatten ? deepFlat(targets) : targets);\n        commonParent.value = nextChilds;\n\n        this.set(this.toTargetGroups(), this._targets);\n\n        return group.toTargetGroups();\n    }\n    public ungroup(targets: TargetGroupsType) {\n        if (targets.length === 1 && isArray(targets[0])) {\n            targets = targets[0];\n        }\n        const commonParent = this.findCommonParent(targets);\n        const groupChilds = targets.map(target => {\n            if (isArray(target)) {\n                return this.findArrayChild(target);\n            }\n            return this.findChild(target);\n        });\n\n        if (commonParent.groupElement) {\n            return null;\n        }\n\n        // all children is targets\n        const isGroupable = commonParent.value.every(child => groupChilds.indexOf(child) > -1);\n\n        if (!isGroupable || commonParent === this) {\n            // has no group\n            return null;\n        }\n\n        const parent = commonParent.parent;\n\n        if (!parent) {\n            return null;\n        }\n        const nextChilds = parent.value.filter(target => target !== commonParent);\n\n        nextChilds.push(...commonParent.value);\n        parent.value = nextChilds;\n\n        this.set(this.toTargetGroups(), this._targets);\n        return commonParent.toTargetGroups();\n    }\n    protected _findParentGroup(\n        element: HTMLElement | SVGElement,\n        range: Array<HTMLElement | SVGElement>,\n    ) {\n        if (!range.length) {\n            return this;\n        }\n        const single = this.map.get(element);\n\n        if (!single) {\n            return this;\n        }\n        let parent: ArrayChild | undefined = single.parent;\n\n        while (parent) {\n            if (range.some(element => parent!.contains(element))) {\n                return parent;\n            }\n            parent = parent.parent;\n        }\n        return this;\n    }\n}\n"],"names":[],"mappings":"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","x_google_ignoreList":[0]}